-
    const description = "A tool to help you draw a whole set of card art for your modded Slay the Spire character quickly.\nSet a short time limit, like one minute per card, input your card data, then go ham!\nWhen you're finished, a ZIP will be provided with all the art (including the scaled-up portrait versions), cropped to the frame.\nAlso useful for beta art."

doctype html
html
    head
        title STS card art speedrunning tool
        meta(name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no")
        link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous")
        link(rel="stylesheet" href="index.css")
        link(rel="icon" href="img/icon.png")

        meta(name="theme-color" content="#f5cf87")
        meta(property="og:type" content="website")
        meta(property="og:site_name" content="ocean.lol")
        meta(property="og:title" content="STS card art speedrunning tool")
        meta(property="og:description" content=description)
        meta(property="og:image" content="https://im.ocean.lol/sts-cast/img/icon.png")
        meta(property="og:image:width" content="32")
        meta(property="og:image:height" content="32")


    body
        #setup
            h1
                img(src="img/icon.png")
                | STS Card Art Speedrunning
            p!=description.replaceAll("\n", "<br />")
            p NOTE: this currently only works on desktop browsers.
            
            hr

            #form
                #step-one
                    .centred
                        p Paste your #[code CardStrings.json] here then click Load. #[br] Leave this blank if you'd rather enter card data manually.
                        textarea.form-control#cardStrings(placeholder="card data goes here")
                        button.btn.btn-primary(onclick="loadStrings()") Load
                #step-two.d-none
                    table.table
                        thead
                            tr
                                th(scope="col") Name
                                th(scope="col" style="width: 100px;") Type
                                th(scope="col") Description
                                th(scope="col") Note
                                th(scope="col" style="width: 30px;")
                        tbody#cardData
                            tr#cardTableRowTemplate.d-none
                                td: input.form-control.form-control-sm(placeholder="Name")
                                td
                                    select.form-select.form-select-sm
                                        option Type
                                        option(value="a") Attack
                                        option(value="s") Skill
                                        option(value="p") Power
                                td: textarea.form-control.form-control-sm(placeholder="Description" rows=0)
                                td: input.form-control.form-control-sm(plceholder="Note")
                                td: button.btn.btn-sm.btn-danger(onclick="$(this).parent().parent().remove()") x
                    button.btn.btn-sm.btn-primary(onclick="newCard()") Add card

                    .d-flex.align-items-center
                        input.form-control#drawTime(type="number" min=5 value=60)
                        span seconds per drawing
                    .form-check
                        label.form-check-label(for="shuffleCards") Shuffle card order
                        input.form-check-input#shuffleCards(type="checkbox" checked)
                    button.btn.btn-lg.btn-success(onclick="beginDrawing()") Start!
        
        #draw.d-none.centred
            #ready.centred
                p When you press draw, you'll have #[span#durationDisplay X] seconds to draw a card image for the card displayed below. #[span#completedDisplay] cards arted.
                Button.btn.btn-lg.btn-success(onclick="drawCard()") Draw!

            .d-flex
                #controls.d-flex.flex-column.align-items-center.justify-content-center
                    .d-flex
                        input.btn-check#penOn(type="radio" name="drawMethod" autocomplete="off" checked)
                        label.btn.btn-secondary(for="penOn")
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pen-fill" viewBox="0 0 16 16">
                                <path d="m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001z"/>
                            </svg>
                        input.btn-check#rubberOn(type="radio" name="drawMethod" autocomplete="off")
                        label.btn.btn-secondary(for="rubberOn")
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eraser-fill" viewBox="0 0 16 16">
                                <path d="M8.086 2.207a2 2 0 0 1 2.828 0l3.879 3.879a2 2 0 0 1 0 2.828l-5.5 5.5A2 2 0 0 1 7.879 15H5.12a2 2 0 0 1-1.414-.586l-2.5-2.5a2 2 0 0 1 0-2.828l6.879-6.879zm.66 11.34L3.453 8.254 1.914 9.793a1 1 0 0 0 0 1.414l2.5 2.5a1 1 0 0 0 .707.293H7.88a1 1 0 0 0 .707-.293l.16-.16z"/>
                            </svg>
                    .d-flex
                        .centred
                            label.form-label(for="penColor") Pen
                            input.form-control.form-control-color#penColor(type="color" value="#000000")
                        .centred
                            label.form-label(for="bgColor") BG
                            input.form-control.form-control-color#bgColor(type="color" value="#eeeeee")
                    .centred
                        label.form-label(for="penSize") Pen size: #[code#penSizeIndicator ?]
                        input.form-range#penSize(type="range" min=3 max=50 value=8 onchange="$('#penSizeIndicator').text($(this).val())")
                #drawing.centred
                    h4: code#timer
                    h2#cardName ???
                    canvas.d-none#drawCanvas(width=500 height=380)
                    canvas#resultCanvas(width=500 height=380)
                    button#btn.btn-success.btn-sm(onclick="endTime = Date.now()") Done

            hr

        #result.d-none.centred
            h2 Art done!
            button.btn.btn-success.btn-lg(onclick="zip()") Download all images as a ZIP
            .d-flex.flex-wrap.justify-content-evenly#cardImages

        script(src="https://code.jquery.com/jquery-3.6.1.min.js" integrity="sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ=" crossorigin="anonymous")
        script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous")
        script(src="https://cdn.jsdelivr.net/npm/jszip@3.10.1/dist/jszip.min.js")
        script(src="index.js")